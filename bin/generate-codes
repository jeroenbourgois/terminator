#! /usr/bin/env ruby
# Generate random codes

class String
  def is_number?
    true if Float(self) rescue false
  end
end

def String.random_alphanumeric(size=16)
  chars = (('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a) - %w(i I o O l 1 0)

  (0...size).collect { chars[Kernel.rand(chars.length)] }.join
end

all = []
howmuch = 10000
length = 10
path = 'foo'

def usage(s)
  $stderr.puts(s)
  $stderr.puts("Usage: #{File.basename($0)}: [-l <logfile] [-q] file ...")

  exit(2)
end

$quiet   = false
$logfile = nil

loop do
  case ARGV[0]
    when '-c'
      ARGV.shift
      howmuch = Integer(ARGV.shift)
    when '-l'
      ARGV.shift
      length = Integer(ARGV.shift)
    when '-p'
      ARGV.shift
      path = ARGV.shift
    when /^-/
      usage("Unknown option: #{ARGV[0].inspect}")
    else
      break
    end
end

path = './' + path

#####################################

puts "Generating #{howmuch} codes with length #{length}."

howmuch.times { |i| all << String.random_alphanumeric(length) }

#####################################

# puts "Looking for duplicates."
#
# dups = all.select { |e| all.count(e) > 1 }.uniq
# dups.each { |dup| all.delete(dup) }
#
# puts "Duplicates:"
# p dups

#####################################

puts "Generating file #{path}."

File.open(path, 'w+') do |file|
  all.each do |item|
    file.puts item
  end
end

